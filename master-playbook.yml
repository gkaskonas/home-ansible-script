---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/raspbian/gpg
      state: present
  - name: Add apt repository for stable version
    apt_repository:
      repo: deb https://download.docker.com/linux/raspbian/ stretch stable
      state: present
  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status
  - name: Add pi user to docker group
    user:
      name: pi
      group: docker
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-stretch main
      state: present
      filename: kubernetes.list
  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl
  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
  handlers:
  - name: docker status
    service: name=docker state=started

  - hosts: master
    become: true
    tasks:
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="{{ node_ip }}" --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16
    - name: Setup kubeconfig for pi user
      command: "{{ item }}"
      with_items:
      - mkdir -p /home/pi/.kube
      - cp -i /etc/kubernetes/admin.conf /home/pi/.kube/config
      - chown pi:pi /home/pi/.kube/config
  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- hosts: workers
  become: true
  tasks:
  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777
  - name: Join the node to cluster
    command: sh /tmp/join-command.sh